/*
 * This file is automatically generated by CLIDE
 *
 * MCV (Module Control Vector)
 */

#include <dsplib/platform_support.h>
#include <dsplib/cl_os.h> 
#include <dsplib/meter.h>
#include <dsplib/response.h>
#include <example_composer_module_common.h>

#define	M70_PI_simple_delay_ms_8_default_delay 	 3.0
#define	M70_PI_simple_delay_ms_8_maximum_delay 	 10.0
#define	M70_PI_simple_delay_ms_8_xheap 	 4
#define	M70_PI_simple_delay_ms_8_sample_resolution 	 16


typedef struct {
	bool enable;	 //bool
	fract delay_value;	 //fract(16.16)
} M70_PI_simple_delay_ms_8_PUBLIC_DATA_t;

typedef struct {
	int delay_buffer[496];	 //int
} M70_PI_simple_delay_ms_8_PRIVATE_DATA_3_t;

typedef struct {
} M70_PI_simple_delay_ms_8_PRIVATE_DATA_2_t;

typedef struct {
	M70_PI_simple_delay_ms_8_PRIVATE_DATA_3_t __memX* delay_buffer_ptr;	 //PRIVATE_DATA_3 __memX__HEAP*
	int __memX* bypass;	 //int __memX*
	fract __memY* __memY* audio_brick_in;	 //fract(1.31) __memY* __memY*
	fract __memY* __memY* audio_brick_out;	 //fract(1.31) __memY* __memY*
	int sample_resolution;	 //int
	int position_in_buffer;	 //int
	int max_delay_size;	 //int
	int memory_zone;	 //int
} M70_PI_simple_delay_ms_8_PRIVATE_DATA_1_t;




