1     	 0000				_GAINPROC_ASM
2     						
3     							.if defined (_GAINPROC_ASM)
4     	 0010				_BLOCK_SIZE .equ 16
5     	 0002				_INPUT_NUM_CHANNELS .equ 2
6     	 0000				_LEFT_CH .equ 0
7     	 0001				_RIGHT_CH .equ 1
8     	 0002				_CENTER_CH .equ 2
9     	 0003				_LS_CH .equ 3
10    	 0004				_RS_CH .equ 4
11    						
12    						# Tremolo
13    	 0001				_LFO_Frequency .equ 1
14    	 0002				_depth .equ 2
15    	 0003				_waveform .equ 3
16    	 0004				_lfoPhase .equ 4
17    	 0005				_inverseSampleRate .equ 5
18    						
19    						
20    	 0000					.public _gainProcessing
21    	 0000					.public _initialize
22    	 0000					.public _processBlock
23    	 0000					.extern _tremoloBuffer
24    	 0000					.extern _headroom_gain
25    	 0000					.extern _input_gain
26    	 0000					.extern _OUTPUT_GAIN6
27    	 0000					.extern _OUTPUT_GAIN2
28    	 0000					.extern _mode
29    	 0000					.extern _tremoloL
30    	 0000					.extern _tremoloR
31    	 0000					.extern _lfo
32    							#.extern _processBlock
33    						
34    							.code_ovly
34     >> start of macro: .code_ovly
1+    									seg_single , "CODE_OVLY", CODE
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_CODE_ )
2+    						    segment
3+    						  .else
4+    						    segment "CODE_OVLY"
5+    							.if "" != ""
6+    						___SegStart_CODE_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .code_ovly
35    						
36    						
37    						
38    	 0000				_initialize:
39    						# void initialize(DSPfract input_gain_func, DSPfract headroom_gain_func, DSPint mode_func);
40    							
41    							# a0 = input_gain_func
42    							# a1 = headroom_gain_func
43    							# b0 = mode_func
44    							
45    							
46    	 0000	 88440000		xmem[_input_gain] = a0
47    						
48    	 0001	 89440000		xmem[_headroom_gain] = a1
49    							
50    	 0002	 8C440000		xmem[_mode] = b0
51    							
52    	 0003	 81880000		ret
53    	 0004				_gainProcessing:
54    							# void gainProcessing(__memY DSPfract pIn[][BLOCK_SIZE], __memY DSPfract pOut[][BLOCK_SIZE]);
55    							# i0 = pIn
56    							# i1 = pOut
57    	 0004	 B94A0000		i5 = (_tremoloBuffer + _LEFT_CH * _BLOCK_SIZE)	# pointer on Tremolo buffer
58    	 0005	 8100002A		do(_BLOCK_SIZE),>loop
59    	 0006	 80940000			x0 = ymem[i0] # get L values
60    	 0007	 84040000			y0 = xmem[_input_gain] # get Input Gain
61    	 0008	 00002404			b0 = x0 * y0	# left_channel * input_gain
62    	 0009	 8CD40005			ymem[i5] = b0	# value to Ls tremoloBuffer
63    	 000A	 85550010			i5 = i5 + _BLOCK_SIZE	# go to Rs channel
64    								
65    	 000B	 80050010			i0 = i0 + _BLOCK_SIZE # go to R channel
66    	 000C	 00007FFF			nop
67    	 000D	 80940000			x0 = ymem[i0]	# get R values
68    	 000E	 90050010			i0 = i0 - _BLOCK_SIZE
69    	 000F	 00002405			b1 = x0 * y0
70    	 0010	 8DD40005			ymem[i5] = b1
71    	 0011	 95550010			i5 = i5 - _BLOCK_SIZE
72    								
73    	 0012	 88040000			a0 = xmem[_mode]	
74    	 0013	 894A0001			uhalfword(a1) = (1)
75    	 0014	 00004F08			a0 - a1
76    	 0015	 84080029			if (a == 0) jmp>ifOM3
77    									# if yes, sum*headroom_gain -> L & R output
78    	 0016	 0000440C				b0 = b0 + b1
79    									
80    	 0017	 4C407FFF				x0 = b0
81    	 0018	 84040000				y0 = xmem[_headroom_gain]
82    	 0019	 00002400				a0 = x0 * y0
83    									
84    	 001A	 48407FFF				x0 = a0
85    	 001B	 84040000				y0 = xmem[_OUTPUT_GAIN6]
86    	 001C	 00002400				a0 = x0 * y0
87    									
88    	 001D	 88D40001				ymem[i1] = a0
89    	 001E	 81150010				i1 = i1 + _BLOCK_SIZE
90    	 001F	 88D40001				ymem[i1] = a0		
91    	 0020	 8D040000				b1 = xmem[_mode]
92    	 0021	 8C7A0002				b0 = (2)
93    	 0022	 00004F05				b1 - b0	
94    	 0023	 86480027				if(b != 0) jmp>ifJmp # check if C channel, if yes enter value
95    	 0024	 81150010					i1 = i1 + _BLOCK_SIZE
96    	 0025	 88D40001					ymem[i1] = a0
97    	 0026	 91150010					i1 = i1 - _BLOCK_SIZE
98    	 0027				%ifJmp:
99    	 0027	 91150010	  			i1 = i1 - _BLOCK_SIZE	
100   	 0028	 02097FFF	  			i1 += 1
101   	 0029				%ifOM3:
102   	 0029	 02087FFF				i0 += 1
103   	 002A	 020D7FFF	%loop: i5 += 1
104   	 002B	 88040000		a0 = xmem[_mode]
105   	 002C	 00004E80		a0&a0
106   	 002D	 8408004F		if (a == 0) jmp>end
107   	 002E				firstCall:
108   	 002E	 B04A0000			i0 = (_tremoloBuffer + _LEFT_CH * _BLOCK_SIZE)	# pointer on Tremolo buffer
109   	 002F	 B14A0000			i1 = (_tremoloBuffer + _LEFT_CH * _BLOCK_SIZE)	# pointer on Tremolo buffer
110   	 0030	 B84A0000			i4 = (_tremoloL)
111   	 0031	 80880050			call(_processBlock)
112   	 0032	 B04A0001			i0 = (1)
113   	 0033	 00007FFF			nop
114   	 0034	 81050030			i1 = i0 + (_LS_CH * _BLOCK_SIZE)
115   	 0035	 B04A0000			i0 = (_tremoloBuffer + _LEFT_CH * _BLOCK_SIZE)
116   	 0036	 80040000			x0 = xmem[_OUTPUT_GAIN2]
117   	 0037	 8100003E			do(_BLOCK_SIZE),>secondCall
118   	 0038	 84940000				y0 = ymem[i0]
119   	 0039	 00007FFF				nop
120   	 003A	 00002400				a0 = x0 * y0
121   	 003B	 00007FFF				nop
122   	 003C	 88D40001				ymem[i1] = a0
123   	 003D	 02097FFF				i1 += 1
124   	 003E	 02087FFF	%secondCall: i0 += 1
125   	 003F				thirdCall:	
126   	 003F	 B04A0000			i0 = (_tremoloBuffer + _RIGHT_CH * _BLOCK_SIZE)	# pointer on Tremolo buffer
127   	 0040	 B14A0000			i1 = (_tremoloBuffer + _RIGHT_CH * _BLOCK_SIZE)	# pointer on Tremolo buffer		i4 = ymem[_tremoloL]
128   	 0041	 B84A0000			i4 = (_tremoloR)
129   	 0042	 80880050			call(_processBlock)
130   	 0043	 B04A0001			i0 = (1)
131   	 0044	 00007FFF			nop
132   	 0045	 81050040			i1 = i0 + (_RS_CH * _BLOCK_SIZE)
133   	 0046	 B04A0000			i0 = (_tremoloBuffer + _RIGHT_CH * _BLOCK_SIZE)
134   	 0047	 80040000			x0 = xmem[_OUTPUT_GAIN2]
135   	 0048	 8100004F			do(_BLOCK_SIZE),>end
136   	 0049	 84940000				y0 = ymem[i0]
137   	 004A	 00002400				a0 = x0 * y0
138   	 004B	 00007FFF				nop
139   	 004C	 88D40001				ymem[i1] = a0
140   	 004D	 02087FFF				i0 += 1
141   	 004E	 02097FFF				i1 += 1
142   	 004F				%end:
143   	 004F	 81880000		ret
144   	 0050				_processBlock:
145   	 0050	 B0D40017		ymem[i7] = i0; i7 += 1
146   	 0051	 B1D40017		ymem[i7] = i1; i7 += 1
147   							
148   	 0052	 85450004		i5 = i4 + _lfoPhase
149   	 0053	 88940005		a0 = ymem[i5]
150   	 0054	 81000076		do(_BLOCK_SIZE),>loop
151   	 0055	 85450003			i5 = i4 + _waveform
152   	 0056	 89940005			a1 = ymem[i5]
153   	 0057	 80880000			call(_lfo)
154   	 0058	 48407FFF			x0 = a0
155   								
156   	 0059	 85450002			i5 = i4 + _depth
157   	 005A	 84940005			y0 = ymem[i5]
158   	 005B	 00002400			a0 = x0 * y0
159   								
160   	 005C	 02177FFF			i7 -= 1
161   	 005D	 B1940007			i1 = ymem[i7]
162   	 005E	 02177FFF			i7 -= 1
163   	 005F	 B0940007			i0 = ymem[i7]
164   	 0060	 00007FFF			nop
165   	 0061	 80940000			x0 = ymem[i0]
166   	 0062	 8C7A7FFF			b0 = (0x7FFF)
167   	 0063	 00004464			b0 = b0 - a0
168   	 0064	 4C447FFF			y0 = b0
169   	 0065	 00002400			a0 = x0 * y0
170   								
171   	 0066	 88D40001			ymem[i1] = a0
172   								
173   								
174   	 0067	 02087FFF			i0 += 1
175   	 0068	 02097FFF			i1 += 1
176   								
177   	 0069	 B0D40017			ymem[i7] = i0; i7 += 1
178   	 006A	 B1D40017			ymem[i7] = i1; i7 += 1
179   								
180   	 006B	 85450001			i5 = i4 + _LFO_Frequency
181   	 006C	 80940005			x0 = ymem[i5]
182   								
183   	 006D	 85450005			i5 = i4 + _inverseSampleRate
184   	 006E	 84940005			y0 = ymem[i5]
185   								
186   	 006F	 00002400			a0 = x0 * y0
187   								
188   	 0070	 00004E00			a0 = a0 << 1
189   								
190   	 0071	 000044A5			b1 = b1 + a0
191   								
192   	 0072	 8C7A7FFF			b0 = (0x7FFF)
193   								
194   	 0073	 00004F05			b1 - b0
195   	 0074	 86880076			if (b<0) jmp>loop
196   	 0075	 000044C5				b1 = b1 - b0 
197   	 0076				%loop:
198   	 0076	 00007FFF		nop
199   	 0077	 85450004		i5 = i4 + _lfoPhase
200   	 0078	 8DD40005		ymem[i5] = b1	
201   	 0079	 02177FFF		i7 -= 1
202   	 007A	 02177FFF		i7 -= 1
203   	 007B	 81880000		ret
204   							.endif
				 SYMBOL TABLE 

    Name                                                                                    Type                  Value 

_BLOCK_SIZE                                                                     					 Number				          16 (10H)
_CENTER_CH                                                                      			  Unused Number				      2 (2H)
_COMMON_INC_PATH_                                                               					 Define                 "C:/CirrusDSP/crystal32/common/inc/"
_DSP_                                                                           					 Define                 "a"
_GAINPROC_ASM                                                                   			  Unused Relocatable        __INIT:0000H
_INPUT_NUM_CHANNELS                                                             			  Unused Number				      2 (2H)
_LEFT_CH                                                                        					 Number				         0 (0H)
_LFO_Frequency                                                                  					 Number				          1 (1H)
_LOCAL_INC_PATH_                                                                					 Define                 "inc/"
_LOCAL_SRC_PATH_                                                                					 Define                 "src/"
_LS_CH                                                                          					 Number				          3 (3H)
_MUI_VERSION_                                                                   					 Define                 "020000"
_OUTPUT_GAIN2                                                                   					 External   
_OUTPUT_GAIN6                                                                   					 External   
_OVLY_                                                                          					 Define                 "standalone"
_OVLY_REVISION_                                                                 					 Define                 "020000"
_RIGHT_CH                                                                       					 Number				          1 (1H)
_ROUTER_INC_PATH_                                                               					 Define                 "rom_inc/"
_RS_CH                                                                          					 Number				          4 (4H)
_SLOT_                                                                          					 Define                 "0"
_TARGET_FAMILY_                                                                 					 Define                 "crystal32"
_TOOLS_VERSION_                                                                 					 Define                 "0x0701"
_VERSION_                                                                       					 Define                 "00"
__CASM_VER__                                                                    			  Unused Variable		        0 (701H)
_depth                                                                          					 Number				          2 (2H)
_gainProcessing                                                                 			  Public Relocatable       gainProc_GEN_0000:0004H
_headroom_gain                                                                  					 External   
_initialize                                                                     			  Public Relocatable       gainProc_GEN_0000:0000H
_input_gain                                                                     					 External   
_inverseSampleRate                                                              					 Number				          5 (5H)
_lfo                                                                            					 External   
_lfoPhase                                                                       					 Number				          4 (4H)
_mode                                                                           					 External   
_processBlock                                                                   			  Public Relocatable       gainProc_GEN_0000:0050H
_tremoloBuffer                                                                  					 External   
_tremoloL                                                                       					 External   
_tremoloR                                                                       					 External   
_waveform                                                                       					 Number				          3 (3H)
firstCall                                                                       			  Unused Relocatable        gainProc_GEN_0000:002EH
thirdCall                                                                       			  Unused Relocatable        gainProc_GEN_0000:003FH

	       SEGMENTS:

Size			  Name										 Class
0000H	 __INIT                                  			 CODE                                    
007CH	 gainProc_GEN_0000                       			 CODE_OVLY                               
